---
- name: Create a runner folder
  # become: true
  win_file:
    path: "{{ runner_folder }}"
    state: directory
    owner: "{{ ansible_user_id }}"

- name: Get the latest runner release
  win_uri:
    url: "https://api.github.com/repos/actions/runner/releases/latest"
    method: GET
    headers:
      Accept: application/vnd.github+json
      Authorization: Bearer {{ lookup('community.general.onepassword', gh_api_token.item, **gh_api_token.args) }}
      X-GitHub-Api-Version: "2022-11-28"
    return_content: true
  register: latest_runner

- name: Download a runner v{{version}}
  vars:
    assets_url: "{{ latest_runner.json.assets_url }}"
    checksum: "{{ latest_runner.json.body | regex_search(sha_pattern, multiline=True) | regex_replace(sha_pattern, '\\1') | trim }}"
    version: "{{ latest_runner.json.tag_name | regex_replace('v(.+)', '\\1') }}"
  win_get_url:
    url: "https://github.com/actions/runner/releases/download/v{{version}}/actions-runner-{{platform}}-{{version}}.zip"
    dest: "{{ runner_folder }}/actions-runner-{{ platform }}-{{ version }}.zip"
    checksum: "{{ checksum }}"
    checksum_algorithm: sha256
  register: donwloaded_runner

- name: Unpack the runner
  win_unzip:
    src: "{{ donwloaded_runner.dest }}"
    dest: "{{ runner_folder }}"
    creates: "{{ runner_folder }}/run.cmd"

- name: Get registration token
  vars:
    endpoint: "{{ 'orgs' if '/' not in github_target else 'repos' }}"
  win_uri:
    url: "https://api.github.com/{{endpoint}}/{{github_target}}/actions/runners/registration-token"
    method: POST
    headers:
      Accept: application/vnd.github+json
      Authorization: Bearer {{ lookup('community.general.onepassword', gh_api_token.item, **gh_api_token.args) }}
      X-GitHub-Api-Version: "2022-11-28"
    status_code: [201]
    return_content: true
  register: registration_token

- name: Configure and run the runner service
  win_shell: >-
    .\config.cmd
    --url {{ ('https://github.com/' + github_target) | quote }}
    --token {{ registration_token.json.token | quote }}
    --name {{ gha_runner.name | quote }}
    --runnergroup {{ gha_runner.group | quote }}
    --labels {{ gha_runner.labels | join(',') | quote }}
    --unattended
    --runasservice
  args:
    chdir: "{{ runner_folder }}"
    creates: "{{ runner_folder }}/.service"
